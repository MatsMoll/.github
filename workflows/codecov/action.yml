name: 'Codecov'
description: 'Run tests and upload code coverage'
inputs:
  python-version:
    required: false
    description: 'Which Python version to install'
    default: '3.9'
  source-dir:
    required: true
    description: 'Which dir to pass as --cov source.'
  poetry-cache-key:
    required: false
    description: 'The cache index. Should be indented to reset cache.'
    default: 'poetry-0'
  pip-cache-key:
    required: false
    description: 'The cache index. Should be indented to reset cache.'
    default: 'pip-0'
outputs: {}
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ inputs.python-version }}
    - name: Load cached Poetry installation
      uses: actions/cache@v2
      with:
        # This path assumes the workflow is run on an ubuntu runner
        path: ~/.local
        key: key-${{ inputs.poetry-cache-key }}
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-in-project: true
    - uses: actions/cache@v2
      id: cache-venv
      with:
        path: .venv
        key: key-${{ inputs.pip-cache-key }}
    - run: |
        if echo ${{ steps.cache-venv.outputs.cache-hit }} | grep -c "true"
        then
          echo "Cache hit - skipping dependency installation"
        else
          poetry install --no-interaction --no-root
        fi
      shell: bash
    - run: poetry install --no-interaction
      shell: bash
    - run: poetry run pytest --cov=${{ inputs.source-dir }} --cov-report=xml
      shell: bash
    - uses: codecov/codecov-action@v2
      with:
        file: ./coverage.xml
        fail_ci_if_error: true
